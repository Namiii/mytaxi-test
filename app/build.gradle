apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

allOpen {
    annotation 'gyg.demo.mytaxitest.OpenClass'
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "demo.mytaxitest"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
        }
    }

    dexOptions {
        preDexLibraries = false
    }

    androidExtensions {
        experimental = true
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // core
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_version"
    implementation "com.google.android.material:material:$android_support_version"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidx_constraint_layout_version"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_webserver_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    //noinspection GradleDependency
    implementation "com.google.dagger:dagger-android:$dagger_version"
    //noinspection GradleDependency
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Architecture components
    implementation "androidx.lifecycle:lifecycle-runtime:$arch_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$arch_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$arch_version"
    testImplementation("androidx.arch.core:core-testing:$arch_version", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })
    androidTestImplementation("androidx.arch.core:core-testing:$arch_version", {
    })

    // RxAndroid and RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid2_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxjava_retrofit_adapter_version"

    // Unit test
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "androidx.annotation:annotation:$androidx_support_annotations_version"
    implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"


    // Instrumented test
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_runner_version"
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    debugImplementation 'androidx.test.espresso.idling:idling-concurrent:3.1.1'
    debugImplementation("com.jakewharton.espresso:okhttp3-idling-resource:$idling_resource_version") {
        exclude module: 'support-annotations'
    }

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    configurations.all {
        resolutionStrategy.force "androidx.annotation:annotation:$androidx_support_annotations_version"
        resolutionStrategy.force "androidx.test.espresso:espresso-idling-resource:3.1.1-beta01"
        resolutionStrategy.force "androidx.recyclerview:recyclerview:1.0.0-rc01"
        resolutionStrategy.force "com.google.android.material:material:1.0.0-rc01"
    }
}
